arguments: src/align_dataset_mtcnn.py FaceData/raw FaceData/process --image_size 160 --margin 32 --random_order --gpu_memory_fraction 0.25
--------------------
tensorflow version: 2.18.0
--------------------
git hash: b'69ff1e149c0d84a123d6516ddd82970e65392608'
--------------------
b'diff --git a/requirements.txt b/requirements.txt\nindex aa078a0..1ef1bb3 100644\n--- a/requirements.txt\n+++ b/requirements.txt\n@@ -7,4 +7,5 @@ matplotlib\n Pillow\n requests\n psutil\n-imageio\n\\ No newline at end of file\n+imageio\n+imutils\n\\ No newline at end of file\ndiff --git a/src/face_rec_cam.py b/src/face_rec_cam.py\nindex 1a425a5..6b48007 100644\n--- a/src/face_rec_cam.py\n+++ b/src/face_rec_cam.py\n@@ -52,9 +52,9 @@ def main():\n             facenet.load_model(FACENET_MODEL_PATH)\n \n             # Get input and output tensors\n-            images_placeholder = tf.get_default_graph().get_tensor_by_name("input:0")\n-            embeddings = tf.get_default_graph().get_tensor_by_name("embeddings:0")\n-            phase_train_placeholder = tf.get_default_graph().get_tensor_by_name("phase_train:0")\n+            images_placeholder = tf.compat.v1.get_default_graph().get_tensor_by_name("input:0")\n+            embeddings = tf.compat.v1.get_default_graph().get_tensor_by_name("embeddings:0")\n+            phase_train_placeholder = tf.compat.v1.get_default_graph().get_tensor_by_name("phase_train:0")\n             embedding_size = embeddings.get_shape()[1]\n \n             pnet, rnet, onet = align.detect_face.create_mtcnn(sess, "src/align")\n@@ -127,8 +127,9 @@ def main():\n                 if cv2.waitKey(1) & 0xFF == ord(\'q\'):\n                     break\n \n-            cap.release()\n-            cv2.destroyAllWindows()\n+            # cap.release()\n+            cap.stop()  # D\xe1\xbb\xabng VideoStream\n+            cv2.destroyAllWindows("camera")\n \n \n main()'